"""Add session time tracking columns

Revision ID: 57ac40682023
Revises: 67ad237ff8fb
Create Date: 2025-09-29 17:07:57.783295

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '57ac40682023'
down_revision: Union[str, None] = '67ad237ff8fb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    from sqlalchemy import inspect

    # Check if columns already exist (for manual->Alembic migration compatibility)
    inspector = inspect(op.get_bind())
    columns = [col['name'] for col in inspector.get_columns('sessions')]

    with op.batch_alter_table('sessions', schema=None) as batch_op:
        if 'total_time_seconds' not in columns:
            batch_op.add_column(sa.Column('total_time_seconds', sa.Integer(), default=0, nullable=True))
            print("✅ Added total_time_seconds column")
        else:
            print("ℹ️  total_time_seconds column already exists")

        if 'max_duration_minutes' not in columns:
            batch_op.add_column(sa.Column('max_duration_minutes', sa.Integer(), default=45, nullable=True))
            print("✅ Added max_duration_minutes column")
        else:
            print("ℹ️  max_duration_minutes column already exists")

    # Update existing rows to set defaults (safe to run multiple times)
    op.execute("UPDATE sessions SET total_time_seconds = 0 WHERE total_time_seconds IS NULL")
    op.execute("UPDATE sessions SET max_duration_minutes = 45 WHERE max_duration_minutes IS NULL")

    # Calculate total_time_seconds for existing completed sessions (safe to run multiple times)
    op.execute("""
        UPDATE sessions
        SET total_time_seconds = CAST(
            (julianday(completed_at) - julianday(started_at)) * 24 * 60 * 60 AS INTEGER
        )
        WHERE completed_at IS NOT NULL
        AND started_at IS NOT NULL
        AND (total_time_seconds = 0 OR total_time_seconds IS NULL)
    """)
    print("✅ Updated existing session time tracking data")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sessions', schema=None) as batch_op:
        batch_op.drop_column('max_duration_minutes')
        batch_op.drop_column('total_time_seconds')
    # ### end Alembic commands ###
